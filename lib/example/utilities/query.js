"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "queryByExpressions", {
    enumerable: true,
    get: function() {
        return queryByExpressions;
    }
});
var _index = require("../../index" ///
);
var _necessary = require("necessary");
var _occamquery = require("occam-query");
var push = _necessary.arrayUtilities.push, isLessThan = _index.nodeUtilities.isLessThan, queryByExpressionString = _occamquery.queryUtilities.queryByExpressionString;
function queryByExpressions(node, expressions, maximumDepth) {
    var nodes = expressions.reduce(function(nodes, expression) {
        var expressionString = expression, expressionNodes = queryByExpressionString(node, expressionString, maximumDepth);
        push(nodes, expressionNodes);
        return nodes;
    }, []);
    nodes.sort(function(nodeA, nodeB) {
        var nodeALessThanNodeB = isLessThan(nodeA, nodeB), result = nodeALessThanNodeB ? -1 : +1;
        return result;
    });
    return nodes;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9leGFtcGxlL3V0aWxpdGllcy9xdWVyeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgbm9kZVV0aWxpdGllcyB9IGZyb20gXCIuLi8uLi9pbmRleFwiIC8vL1xuaW1wb3J0IHsgYXJyYXlVdGlsaXRpZXMgfSBmcm9tIFwibmVjZXNzYXJ5XCI7XG5pbXBvcnQgeyBxdWVyeVV0aWxpdGllcyB9IGZyb20gXCJvY2NhbS1xdWVyeVwiO1xuXG5jb25zdCB7IHB1c2ggfSA9IGFycmF5VXRpbGl0aWVzLFxuICAgICAgeyBpc0xlc3NUaGFuIH0gPSBub2RlVXRpbGl0aWVzLFxuICAgICAgeyBxdWVyeUJ5RXhwcmVzc2lvblN0cmluZyB9ID0gcXVlcnlVdGlsaXRpZXM7XG5cbmV4cG9ydCBmdW5jdGlvbiBxdWVyeUJ5RXhwcmVzc2lvbnMobm9kZSwgZXhwcmVzc2lvbnMsIG1heGltdW1EZXB0aCkge1xuICBjb25zdCBub2RlcyA9IGV4cHJlc3Npb25zLnJlZHVjZSgobm9kZXMsIGV4cHJlc3Npb24pID0+IHtcbiAgICBjb25zdCBleHByZXNzaW9uU3RyaW5nID0gZXhwcmVzc2lvbiwgIC8vL1xuICAgICAgICAgIGV4cHJlc3Npb25Ob2RlcyA9IHF1ZXJ5QnlFeHByZXNzaW9uU3RyaW5nKG5vZGUsIGV4cHJlc3Npb25TdHJpbmcsIG1heGltdW1EZXB0aCk7XG5cbiAgICBwdXNoKG5vZGVzLCBleHByZXNzaW9uTm9kZXMpO1xuXG4gICAgcmV0dXJuIG5vZGVzO1xuICB9LCBbXSk7XG5cbiAgbm9kZXMuc29ydCgobm9kZUEsIG5vZGVCKSA9PiB7XG4gICAgY29uc3Qgbm9kZUFMZXNzVGhhbk5vZGVCID0gaXNMZXNzVGhhbihub2RlQSwgbm9kZUIpLFxuICAgICAgICAgIHJlc3VsdCA9IG5vZGVBTGVzc1RoYW5Ob2RlQiA/XG4gICAgICAgICAgICAgICAgICAgIC0xIDpcbiAgICAgICAgICAgICAgICAgICAgICArMTtcblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH0pO1xuXG4gIHJldHVybiBub2Rlcztcbn1cblxuIl0sIm5hbWVzIjpbInF1ZXJ5QnlFeHByZXNzaW9ucyIsInB1c2giLCJhcnJheVV0aWxpdGllcyIsImlzTGVzc1RoYW4iLCJub2RlVXRpbGl0aWVzIiwicXVlcnlCeUV4cHJlc3Npb25TdHJpbmciLCJxdWVyeVV0aWxpdGllcyIsIm5vZGUiLCJleHByZXNzaW9ucyIsIm1heGltdW1EZXB0aCIsIm5vZGVzIiwicmVkdWNlIiwiZXhwcmVzc2lvbiIsImV4cHJlc3Npb25TdHJpbmciLCJleHByZXNzaW9uTm9kZXMiLCJzb3J0Iiwibm9kZUEiLCJub2RlQiIsIm5vZGVBTGVzc1RoYW5Ob2RlQiIsInJlc3VsdCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBVWdCQTs7O2VBQUFBOzs7cUJBUmMsY0FBYyxHQUFHOzt5QkFDaEI7MEJBQ0E7QUFFL0IsSUFBTSxBQUFFQyxPQUFTQyx5QkFBYyxDQUF2QkQsTUFDRixBQUFFRSxhQUFlQyxvQkFBYSxDQUE1QkQsWUFDRixBQUFFRSwwQkFBNEJDLDBCQUFjLENBQTFDRDtBQUVELFNBQVNMLG1CQUFtQk8sSUFBSSxFQUFFQyxXQUFXLEVBQUVDLFlBQVk7SUFDaEUsSUFBTUMsUUFBUUYsWUFBWUcsTUFBTSxDQUFDLFNBQUNELE9BQU9FO1FBQ3ZDLElBQU1DLG1CQUFtQkQsWUFDbkJFLGtCQUFrQlQsd0JBQXdCRSxNQUFNTSxrQkFBa0JKO1FBRXhFUixLQUFLUyxPQUFPSTtRQUVaLE9BQU9KO0lBQ1QsR0FBRyxFQUFFO0lBRUxBLE1BQU1LLElBQUksQ0FBQyxTQUFDQyxPQUFPQztRQUNqQixJQUFNQyxxQkFBcUJmLFdBQVdhLE9BQU9DLFFBQ3ZDRSxTQUFTRCxxQkFDQyxDQUFDLElBQ0MsQ0FBQztRQUVuQixPQUFPQztJQUNUO0lBRUEsT0FBT1Q7QUFDVCJ9